def word_break(s, word_dict):
    memo = {} #memory - save the words - dynamic programming 
    word_set = set(word_dict) # set is much faster than list 

    def helper(start):
        if start == len(s):
            return[]
        
        if start in memo:
            return memo[start]
        
        for end in range(start +1, len(s)+1):
            word =s[start:end]
            if word in word_set:
                result = helper(end)
                if result is not None:
                    memo[start] = [word] + result
                    return memo[start]
                
        memo[start] = None
        return None
    
    return helper(0)

# test 
print(word_break("bedbathandbeyond", ["bed", "bath", "bedbath", "and", "beyond"]))